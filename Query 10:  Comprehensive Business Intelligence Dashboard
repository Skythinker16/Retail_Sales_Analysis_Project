-- Business Problem: Create a comprehensive dashboard with KPIs, trends, and comparative analysis
WITH base_metrics AS (
    SELECT 
        year,
        quarter,
        month,
        product_category,
        gender,
        age_group,
        is_weekend,
        COUNT(*) AS transactions,
        SUM(revenue) AS revenue,
        SUM(profit) AS profit,
        SUM(quantity) AS quantity_sold,
        AVG(revenue) AS avg_order_value,
        AVG(profit_margin) AS avg_profit_margin
    FROM `elaborate-art-471212-d9.Retail_Sales_Dataset.Retail_Sales_cleaned`
    GROUP BY year, quarter, month, product_category, gender, age_group, is_weekend
),
monthly_totals AS (
    SELECT 
        year,
        month,
        SUM(revenue) AS monthly_revenue,
        SUM(profit) AS monthly_profit
    FROM base_metrics
    GROUP BY year, month
),
kpi_calculations AS (
    SELECT 
        bm.*,
        mt.monthly_revenue,
        mt.monthly_profit,
        ROUND((bm.revenue / mt.monthly_revenue) * 100, 2) AS revenue_share_pct,
        LAG(mt.monthly_revenue) OVER (ORDER BY bm.year, bm.month) AS prev_month_revenue,
        FIRST_VALUE(mt.monthly_revenue) OVER (
            PARTITION BY bm.year 
            ORDER BY bm.month 
            ROWS UNBOUNDED PRECEDING
        ) AS ytd_first_month_revenue
    FROM base_metrics bm
    JOIN monthly_totals mt ON bm.year = mt.year AND bm.month = mt.month
)
SELECT 
    year,
    quarter,
    month,
    product_category,
    gender,
    age_group,
    CASE WHEN is_weekend THEN 'Weekend' ELSE 'Weekday' END AS day_type,
    transactions,
    revenue,
    ROUND(profit, 2) AS profit,
    quantity_sold,
    ROUND(avg_order_value, 2) AS avg_order_value,
    ROUND(avg_profit_margin * 100, 2) AS profit_margin_pct,
    revenue_share_pct,
    CASE 
        WHEN prev_month_revenue IS NOT NULL THEN 
            ROUND(((monthly_revenue - prev_month_revenue) / prev_month_revenue) * 100, 2)
        ELSE NULL
    END AS mom_growth_pct,
    ROUND((monthly_revenue / ytd_first_month_revenue) * 100, 2) AS ytd_growth_index
FROM kpi_calculations
ORDER BY year DESC, quarter DESC, month DESC, revenue DESC;
